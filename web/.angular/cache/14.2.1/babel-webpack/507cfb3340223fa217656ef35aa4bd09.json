{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nlet AuthService = class AuthService {\n  constructor(afs, afAuth, router) {\n    this.afs = afs;\n    this.afAuth = afAuth;\n    this.router = router;\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', 'null');\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  get user() {\n    if (this.isLoggedIn) {\n      return JSON.parse(localStorage.getItem('user'));\n    }\n\n    throw new Error(\"No found uid\");\n  }\n\n  get isLoggedIn() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user !== null && user.emailVerified !== false ? true : false;\n  }\n\n  googleAuth() {\n    return this.authLogin(new firebase.auth.GoogleAuthProvider()).then(res => {\n      if (res) {\n        console.log(\"google loging\");\n        this.router.navigate(['home']);\n      }\n    });\n  }\n\n  authLogin(provider) {\n    return this.afAuth.signInWithPopup(provider).then(result => {\n      this.setUserData(result.user);\n      this.router.navigate(['home']);\n    }).catch(error => {\n      window.alert(error);\n    });\n  }\n\n  setUserData(user) {\n    const userRef = this.afs.doc(`users/${user.uid}`);\n    const userData = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    };\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  signOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    });\n  }\n\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module"}