{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/api.service\";\nimport * as i2 from \"src/app/shared/services/auth.service\";\nimport * as i3 from \"src/app/shared/services/websocket.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/cdk/clipboard\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction BoardComponent_h5_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"h5\", 12);\n    i0.ɵɵlistener(\"click\", function BoardComponent_h5_6_Template_h5_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.invitation());\n    });\n    i0.ɵɵtext(1, \"INVITAR JUGADORES\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_13_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 16);\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_13_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 17);\n  }\n\n  if (rf & 2) {\n    const card_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/\", card_r5.cartaId, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"mat-card\", 13)(2, \"mat-card-title-group\");\n    i0.ɵɵtemplate(3, BoardComponent_mat_grid_tile_13_img_3_Template, 1, 0, \"img\", 14);\n    i0.ɵɵtemplate(4, BoardComponent_mat_grid_tile_13_img_4_Template, 1, 1, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-content\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const k_r6 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tirador[k_r6].uid !== ctx_r1.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tirador[k_r6].uid === ctx_r1.uid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tirador[k_r6].alias, \" \");\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_16_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title-group\");\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-content\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-actions\")(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function BoardComponent_mat_grid_tile_16_mat_card_1_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const card_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.poner(card_r10.cartaId));\n    });\n    i0.ɵɵtext(7, \" MOVER A TABLERO \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const card_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/\", card_r10.cartaId, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Poder \", card_r10.poder, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"disabled\", !ctx_r11.tableroHabilitado || !ctx_r11.tira);\n  }\n}\n\nfunction BoardComponent_mat_grid_tile_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵtemplate(1, BoardComponent_mat_grid_tile_16_mat_card_1_Template, 8, 3, \"mat-card\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !card_r10.estaOculta);\n  }\n}\n\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor(api, authService, ws, route, router, clipboard) {\n      this.api = api;\n      this.authService = authService;\n      this.ws = ws;\n      this.route = route;\n      this.router = router;\n      this.clipboard = clipboard;\n      this.registro = new Map();\n      this.tira = false;\n      this.tirador = [];\n      this.jugadores = [];\n      this.jugadoresIds = [];\n      this.cartasDelJugador = [];\n      this.cartasDelTablero = [];\n      this.tiempo = 0;\n      this.jugadoresRonda = 0;\n      this.jugadoresTablero = 0;\n      this.numeroRonda = 0;\n      this.juegoId = \"\";\n      this.uid = \"\";\n      this.roundStarted = false;\n      this.tableroHabilitado = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.juegoId = params['id'];\n        this.uid = this.authService.user.uid;\n        this.api.getMiMazo(this.uid, this.juegoId).subscribe(element => {\n          this.cartasDelJugador = element.cartas;\n        });\n        this.api.getTablero(this.juegoId).subscribe(element => {\n          this.jugadoresIds = element.tablero.jugadores;\n          this.cartasDelTablero = Object.entries(element.tablero.cartas).flatMap(a => {\n            return a[1];\n          });\n          this.tiempo = element.tiempo;\n          this.jugadoresRonda = element.ronda.jugadores.length;\n          this.jugadoresTablero = element.tablero.jugadores.length;\n          this.numeroRonda = element.ronda.numero;\n        });\n        this.api.getJugadores().subscribe(jugadores => jugadores.forEach(jugador => {\n          this.registro = new Map(this.jugadoresIds.map(jugid => {\n            return [jugid, 0];\n          }));\n          if (this.jugadoresIds.includes(jugador.uid)) this.jugadores.push({\n            uid: jugador.uid,\n            alias: jugador.alias\n          });\n        }));\n        this.ws.open(this.juegoId);\n        this.ws.listener(event => {\n          if (event.type === 'cardgame.ponercartaentablero') {\n            this.tirador.push(this.jugadores.find(obj => obj.uid === event.jugadorId.uuid));\n            this.registro.set(this.tirador[this.tirador.length - 1].uid, this.registro.get(this.uid) + 1);\n            this.cartasDelTablero.push({\n              cartaId: event.carta.cartaId.uuid,\n              poder: event.carta.poder,\n              estaOculta: event.carta.estaHabilitada,\n              estaHabilitada: event.carta.estaHabilitada\n            });\n          }\n\n          if (this.registro.get(this.uid) >= 2) this.tira = false;\n\n          if (event.type === 'cardgame.cartaquitadadelmazo') {\n            this.cartasDelJugador = this.cartasDelJugador.filter(item => item.cartaId !== event.carta.cartaId.uuid);\n          }\n\n          if (event.type === 'cardgame.tiempocambiadodeltablero') {\n            this.tiempo = event.tiempo;\n          }\n\n          if (event.type === 'cardgame.rondainiciada') {\n            this.tira = true;\n            this.roundStarted = true;\n            this.tableroHabilitado = true;\n          }\n\n          if (event.type === 'cardgame.rondaterminada') {\n            this.tira = false;\n            this.tirador = [];\n            this.registro = new Map();\n            this.cartasDelTablero = [];\n            this.roundStarted = false;\n            this.tableroHabilitado = false;\n          }\n\n          if (event.type == 'cardgame.rondacreada') {\n            this.tiempo = event.tiempo;\n            this.jugadoresRonda = event.ronda.jugadores.length;\n            this.numeroRonda = event.ronda.numero;\n            this.tableroHabilitado = false;\n            this.roundStarted = false;\n          }\n\n          if (event.type === 'cardgame.juegofinalizado') {\n            setTimeout(() => {\n              Swal.fire({\n                title: 'Juego finalizado' + '\\n' + 'Ganador: ' + event.alias,\n                confirmButtonText: 'Cerrar',\n                confirmButtonColor: '#9E1A00'\n              }).then(result => {\n                if (result.isConfirmed) this.router.navigate(['home']);\n              });\n            }, 1700);\n          }\n\n          if (event.type === 'cardgame.cartasasignadasajugador') {\n            if (event.ganadorId.uuid === this.uid) {\n              event.cartasApuesta.forEach(carta => {\n                this.cartasDelJugador.push({\n                  cartaId: carta.cartaId.uuid,\n                  poder: carta.poder,\n                  estaOculta: carta.estaOculta,\n                  estaHabilitada: carta.estaHabilitada\n                });\n              });\n              Swal.fire({\n                icon: 'success',\n                title: 'Ganaste la ronda!',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            } else {\n              Swal.fire({\n                icon: 'error',\n                title: 'Perdiste la ronda :(',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            }\n          }\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      this.ws.close();\n    }\n\n    poner(cartaId) {\n      this.api.ponerCarta({\n        cartaId: cartaId,\n        juegoId: this.juegoId,\n        jugadorId: this.uid\n      }).subscribe();\n    }\n\n    iniciarRonda() {\n      this.api.iniciarRonda({\n        juegoId: this.juegoId\n      }).subscribe();\n    }\n\n    invitation() {\n      this.clipboard.copy(\"https://cardgame-a9bac.web.app\" + this.router.url);\n      Swal.fire({\n        icon: 'info',\n        title: 'Link Copiado',\n        showConfirmButton: false,\n        timer: 1000\n      });\n    }\n\n  }\n\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.WebsocketService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.Clipboard));\n  };\n\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    decls: 17,\n    vars: 8,\n    consts: [[1, \"displayTable\"], [1, \"row\"], [\"role\", \"main\", 1, \"col-md-7\", \"ml-sm-auto\", \"col-lg-9\", \"px-4\"], [1, \"tope\"], [1, \"h2\"], [\"class\", \"invitation\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"disabled\", \"click\"], [1, \"inner-adjust\"], [\"cols\", \"6\", \"rowHeight\", \"1:2\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"d-md-block\", \"sidebar-cards\"], [\"cols\", \"5\", \"rowHeight\", \"2:4\"], [1, \"invitation\", 3, \"click\"], [1, \"m-2\"], [\"mat-card-image\", \"\", \"src\", \"/assets/backcard.jpg\", 4, \"ngIf\"], [\"mat-card-image\", \"\", 3, \"src\", 4, \"ngIf\"], [\"mat-card-image\", \"\", \"src\", \"/assets/backcard.jpg\"], [\"mat-card-image\", \"\", 3, \"src\"], [4, \"ngIf\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"main\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, BoardComponent_h5_6_Template, 2, 0, \"h5\", 5);\n        i0.ɵɵelementStart(7, \"h4\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_9_listener() {\n          return ctx.iniciarRonda();\n        });\n        i0.ɵɵtext(10, \" INICIAR \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"mat-grid-list\", 8);\n        i0.ɵɵtemplate(13, BoardComponent_mat_grid_tile_13_Template, 7, 3, \"mat-grid-tile\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"mat-grid-list\", 11);\n        i0.ɵɵtemplate(16, BoardComponent_mat_grid_tile_16_Template, 2, 1, \"mat-grid-tile\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Tiempo \", ctx.tiempo, \"s\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.numeroRonda <= 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate3(\" RONDA # \", ctx.numeroRonda, \" Jugadores [\", ctx.jugadoresRonda, \"/\", ctx.jugadoresTablero, \"] \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"disabled\", ctx.roundStarted);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cartasDelTablero);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cartasDelJugador);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.MatGridList, i7.MatGridTile, i8.MatCard, i8.MatCardTitleGroup, i8.MatCardContent, i8.MatCardActions, i8.MatCardImage, i9.MatButton],\n    styles: [\".mat-button[_ngcontent-%COMP%]{margin-bottom:10px}.mat-button[_ngcontent-%COMP%]:disabled{background-color:#dcdcdc;border:1px solid white;color:gray;text-decoration:line-through}.mat-button[_ngcontent-%COMP%]:enabled{background-color:#9400d3;border:1px solid white;color:#fff}.mat-card-actions[_ngcontent-%COMP%]{background-color:transparent;margin:auto;padding-bottom:15px;position:relative;top:-10px}.mat-card-content[_ngcontent-%COMP%]{background-color:green;color:#fff;text-align:center}.mat-card-title-group[_ngcontent-%COMP%]{background-color:#adff2f;display:flex;justify-content:center;align-items:center;overflow:hidden}.mat-card-title-group[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:auto;background-size:cover;background-repeat:no-repeat;background-position:center}.mat-card[_ngcontent-%COMP%]{background-color:#8b0000;border:2px solid black;padding:5px;margin:10px}.mat-grid-tile[_ngcontent-%COMP%]{background-color:#deb887;text-align:center}.mat-grid-list[_ngcontent-%COMP%]{background-color:#deb887;border:10px solid black;border-radius:10px}.tope[_ngcontent-%COMP%]{background-color:#fff;text-align:center;border:10px solid black;border-radius:10px;margin:20px}.invitation[_ngcontent-%COMP%]:hover{cursor:pointer;color:green}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}